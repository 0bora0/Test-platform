import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.1/firebase-app.js";
import { getFirestore, collection, getDocs, getDoc, updateDoc, doc } from "https://www.gstatic.com/firebasejs/10.8.1/firebase-firestore.js";

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ Firebase
const firebaseConfig = {
    apiKey: "AIzaSyCqOBkhYePT5u2O_1xPiMFPo0TakvT2PA8",
    authDomain: "testcenter-2025feb.firebaseapp.com",
    projectId: "testcenter-2025feb",
    storageBucket: "testcenter-2025feb.firebasestorage.app",
    messagingSenderId: "855126302941",
    appId: "1:855126302941:web:15f3ab817a4a8cad3c3b34",
    measurementId: "G-LKR8SRFFWR"
  };

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

document.addEventListener("DOMContentLoaded", async () => {
    const disciplineSelect = document.getElementById("discipline-select");

    try {
        // –ó–∞—Ä–µ–∂–¥–∞–º–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ç–µ –æ—Ç "courses"
        const coursesRef = collection(db, "courses");
        const querySnapshot = await getDocs(coursesRef);

        querySnapshot.forEach((doc) => {
            const courseData = doc.data();
            const option = document.createElement("option");
            option.value = doc.id; // ID –Ω–∞ –∫—É—Ä—Å–∞
            option.textContent = courseData.disciplineName; // –ò–º–µ –Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ç–∞
            disciplineSelect.appendChild(option);
        });

        console.log("üìå –ó–∞—Ä–µ–¥–µ–Ω–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏:", disciplineSelect.innerHTML);
    } catch (error) {
        console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ç–µ:", error);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞
document.getElementById("addQuestionBankForm").addEventListener("submit", async (e) => {
    e.preventDefault();

    const selectedDisciplineId = document.getElementById("discipline-select").value;
    const questionBankName = document.getElementById("questionBankName").value.trim();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –≤—Å–∏—á–∫–∏ –ø–æ–ª–µ—Ç–∞ —Å–∞ –ø–æ–ø—ä–ª–Ω–µ–Ω–∏
    if (!selectedDisciplineId || !questionBankName) {
        alert("‚ö†Ô∏è –ú–æ–ª—è, –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –≤—Å–∏—á–∫–∏ –ø–æ–ª–µ—Ç–∞.");
        return;
    }

    try {
        // –í–∑–∏–º–∞–º–µ —Ç–µ–∫—É—â–∏—Ç–µ –¥–∞–Ω–Ω–∏ –∑–∞ –∏–∑–±—Ä–∞–Ω–∞—Ç–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞
        const courseRef = doc(db, "courses", selectedDisciplineId);
        const courseSnapshot = await getDoc(courseRef);

        if (!courseSnapshot.exists()) {
            alert("‚ùå –ì—Ä–µ—à–∫–∞: –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ç–∞ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.");
            return;
        }

        // –í–∑–∏–º–∞–º–µ —Ç–µ–∫—É—â–∏—Ç–µ –≤—ä–ø—Ä–æ—Å–Ω–∏ –±–∞–Ω–∫–∏ (–∞–∫–æ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—Ç)
        let courseData = courseSnapshot.data();
        let questionBanks = courseData.questionBanks || [];

        // –î–æ–±–∞–≤—è–º–µ –Ω–æ–≤–∞—Ç–∞ –±–∞–Ω–∫–∞ —Å –≤—ä–ø—Ä–æ—Å–∏
        const newQuestionBank = {
            name: questionBankName,
            questions: [] // –ü—Ä–∞–∑–Ω–∞ –º–∞—Å–∏–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –º–æ–∂–µ –¥–∞ —Å–µ –¥–æ–±–∞–≤—è—Ç –≤—ä–ø—Ä–æ—Å–∏ –ø–æ-–∫—ä—Å–Ω–æ
        };

        // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤–∞—Ç–∞ –±–∞–Ω–∫–∞ –∫—ä–º —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏—Ç–µ –≤—ä–ø—Ä–æ—Å–Ω–∏ –±–∞–Ω–∫–∏
        questionBanks.push(newQuestionBank);

        // –û–±–Ω–æ–≤—è–≤–∞–º–µ –∑–∞–ø–∏—Å–∞ –≤ "courses"
        await updateDoc(courseRef, {
            questionBanks: questionBanks,
        });

        console.log(`‚úÖ –ë–∞–Ω–∫–∞ —Å –≤—ä–ø—Ä–æ—Å–∏ "${questionBankName}" –µ –¥–æ–±–∞–≤–µ–Ω–∞ –∫—ä–º ${courseData.disciplineName}`);
        alert("‚úÖ –ë–∞–Ω–∫–∞—Ç–∞ —Å –≤—ä–ø—Ä–æ—Å–∏ –±–µ—à–µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω–∞!");

        // –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
        location.reload();
    } catch (error) {
        console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –≤—ä–ø—Ä–æ—Å–Ω–∞—Ç–∞ –±–∞–Ω–∫–∞:", error);
        alert("‚ö†Ô∏è –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ—Ç–æ. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.");
    }
});
