// Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
import { getFirestore, collection, getDocs, query, where } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-firestore.js";

const firebaseConfig = {
    apiKey: "AIzaSyCR-nsO0Eibf9Fmba6zp0IeyNTiZ1YTNHQ",
    authDomain: "testcenter-2025.firebaseapp.com",
    projectId: "testcenter-2025",
    storageBucket: "testcenter-2025.appspot.com",
    messagingSenderId: "446759343746",
    appId: "1:446759343746:web:9025b482329802cc34069b",
    measurementId: "G-0K3X6WSL09"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–µ
async function fetchTests(discipline) {
    try {
        const testsRef = collection(db, "tests");
        const q = query(testsRef, where("disciplineName", "==", discipline));
        const querySnapshot = await getDocs(q);

        let tableBody = document.getElementById("usersTableBody");
        tableBody.innerHTML = "";

        querySnapshot.forEach((doc) => {
            const test = doc.data();
            const testId = doc.id;  // –í–∑–µ–º–∞–º–µ ID –Ω–∞ —Ç–µ—Å—Ç–∞ –æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞

            if (test.students && Array.isArray(test.students)) {
                test.students.forEach(student => {
                    let row = document.createElement("tr");
                    row.innerHTML = `
                        <td><img src='default-avatar.png' class='rounded-circle' width='40'></td>
                        <td>${student.firstName || "–ù—è–º–∞ –∏–º–µ"}</td>
                        <td>${student.lastName || "–ù—è–º–∞ —Ñ–∞–º–∏–ª–∏—è"}</td>
                        <td>${test.disciplineName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞"}</td>
                        <td>${test.questionCount || 0}</td>
                        <td>${test.testDuration || 0} –º–∏–Ω.</td>
                        <td>
                            <button class='btn btn-danger btn-sm' onclick='removeUser("${student.email}")'>üóëÔ∏è</button>
                            <button class='btn btn-warning btn-sm' onclick='toggleVisibility("${student.email}")'>üëÅÔ∏è</button>
                            <button class='btn btn-primary btn-sm' onclick='previewTest("${testId}")'>üîç</button>
                            <button class='btn btn-info btn-sm' onclick='addTime("${student.email}")'>‚è≥</button>
                            <button class='btn btn-success btn-sm' onclick='downloadTest("${testId}")'>üì•</button>
                        </td>
                        <td>${test.completed ? '‚úÖ' : '‚ùå'}</td>
                    `;
                    tableBody.appendChild(row);
                });
            } else {
                console.warn(`–¢–µ—Å—Ç—ä—Ç ${testId} –Ω—è–º–∞ —Å—Ç—É–¥–µ–Ω—Ç–∏.`);
            }
        });

    } catch (error) {
        console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–µ—Ç–µ:", error);
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –∑–∞ –±—É—Ç–æ–Ω–∏—Ç–µ
async function removeUser(email) {
    alert("–ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ " + email);
}

async function toggleVisibility(email) {
    alert("–°–º—è–Ω–∞ –Ω–∞ –≤–∏–¥–∏–º–æ—Å—Ç—Ç–∞ –∑–∞ " + email);
}

async function previewTest(testId) {
    alert("–ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ —Ç–µ—Å—Ç " + testId);
}

async function addTime(email) {
    alert("–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –≤—Ä–µ–º–µ –∑–∞ " + email);
}

async function downloadTest(testId) {
    alert("–ò–∑—Ç–µ–≥–ª—è–Ω–µ –Ω–∞ —Ç–µ—Å—Ç " + testId);
}

// –°–ª—É—à–∞–Ω–µ –Ω–∞ –ø—Ä–æ–º—è–Ω–∞ –≤ —Å–µ–ª–µ–∫—Ç–∞
document.addEventListener("DOMContentLoaded", () => {
    const disciplineSelect = document.getElementById("disciplineSelect");

    if (disciplineSelect) {
        disciplineSelect.addEventListener("change", () => {
            fetchTests(disciplineSelect.value);
        });
    } else {
        console.error("disciplineSelect –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –≤ DOM.");
    }
});
